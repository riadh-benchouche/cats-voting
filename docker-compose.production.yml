services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: catsvoting-backend
    environment:
      NODE_ENV: production
      DB_HOST: ${DB_HOST:-database}
      DB_PORT: ${DB_PORT:-5432}
      DB_USERNAME: ${DB_USERNAME:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-postgres}
      DB_DATABASE: ${DB_DATABASE:-voting_db}
      JWT_SECRET: ${JWT_SECRET:-your_jwt_secret_here}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID:-your_google_client_id}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET:-your_google_client_secret}
      GITHUB_CLIENT_ID: ${GITHUB_CLIENT_ID:-your_github_client_id}
      GITHUB_CLIENT_SECRET: ${GITHUB_CLIENT_SECRET:-your_github_client_secret}
    ports:
      - "3000:3000"
    depends_on:
      - database
    restart: unless-stopped
    networks:
      - catsvoting-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: catsvoting-frontend
    environment:
      VITE_API_URL: ${VITE_API_URL:-http://localhost:3000/api}
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - catsvoting-network

  database:
    image: postgres:15
    container_name: catsvoting-db
    environment:
      POSTGRES_DB: ${DB_DATABASE:-voting_db}
      POSTGRES_USER: ${DB_USERNAME:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - catsvoting-network

  nginx:
    image: nginx:alpine
    container_name: catsvoting-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/sites-available:/etc/nginx/sites-available
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - backend
      - frontend
    restart: unless-stopped
    networks:
      - catsvoting-network

  certbot:
    image: certbot/certbot
    container_name: catsvoting-certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  postgres_data:

networks:
  catsvoting-network:
    driver: bridge